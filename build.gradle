buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.palantir:gradle-baseline-java:${gradleBaselineJavaVersion}"
        classpath "com.bmuschko:gradle-docker-plugin:${gradleDockerPluginVersion}"
        classpath "net.ltgt.gradle:gradle-apt-plugin:${gradleAptPluginVersion}"
    }
}

plugins {
    id 'com.palantir.git-version' version '0.1.3'
    id 'org.unbroken-dome.test-sets' version '1.2.0'
}

apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'com.palantir.baseline'
apply plugin: 'java'
apply plugin: 'net.ltgt.apt'

group 'com.sharpandrew'
version gitVersion()

mainClassName = 'com.sharpandrew.learndropwizard.LearnDropwizardApplication'
sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

sourceSets {
    main.java.srcDir "src/main/java"
    main.resources.srcDir "src/main/resources"
}

def dockerImageName = "ags799/${name}"
def dockerTagName = "${dockerImageName}:${version}"
def dockerPort = 8080
docker {
    javaApplication {
        baseImage = 'openjdk:8u102'
        maintainer = 'Andrew Sharp "me@sharpandrew.com"'
        ports = [dockerPort]
        tag = dockerTagName
    }
    url = 'unix:///var/run/docker.sock'
}

task dockerBuild(dependsOn: dockerBuildImage, group: 'docker', type: Exec) {
    commandLine 'docker', 'tag', dockerTagName, "${dockerImageName}:latest"
}

testSets {
    integrationTest
}

integrationTest.dependsOn dockerBuild

configurations {
    dockerJava {
        resolutionStrategy {
            force 'de.gesellix:unix-socket-factory:2016-04-06T22-21-19'
        }
    }
}

dependencies {
    apt "org.immutables:value:${immutablesVersion}"

    compileOnly "org.immutables:value:${immutablesVersion}:annotations"

    compile "io.dropwizard:dropwizard-core:${dropwizardVersion}"
    compile "org.apache.commons:commons-lang3:${apacheCommonsLangVersion}"
    compile "com.google.code.findbugs:findbugs-annotations:${findbugsAnnotationsVersion}"

    testCompile "junit:junit:${junitVersion}"
    testCompile "org.assertj:assertj-core:${assertJVersion}"

    integrationTestCompile "org.testcontainers:testcontainers:${testContainersVersion}"
}

task dockerRun(dependsOn: 'dockerBuild', group: 'docker', type: Exec) {
    commandLine "docker run --rm -p ${dockerPort}:${dockerPort} ${dockerTagName} server".split(' ')
}

// Note that the checked-in checkstyle-suppressions.xml and excludeFilter.xml can get out-of-date.
// Check them against gradle-baseline's defaults whenever updating gradle-baseline.
task customCheckstyleSuppressions(dependsOn: 'baselineUpdateConfig', type: Copy) {
    from 'checkstyle-suppressions.xml'
    into '.baseline/checkstyle'
    dependsOn 'baselineUpdateConfig'
}

task customFindbugsExcludeFilter(dependsOn: 'baselineUpdateConfig', type: Copy) {
    from 'excludeFilter.xml'
    into '.baseline/findbugs'
}

task customBaselineUpdateConfig(
        dependsOn: ['customCheckstyleSuppressions', 'customFindbugsExcludeFilter'], group: 'baseline') {
}
